// This file is auto-generated by @hey-api/openapi-ts

export type CreateUserRequest = {
    login: string;
    name: string;
    surname: string;
    patronymic?: string | null;
    role: UserRoles;
    password: string;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type UpdateUserRequest = {
    id: string;
    login?: string | null;
    name?: string | null;
    surname?: string | null;
    patronymic?: string | null;
    role?: UserRoles | null;
    is_blocked?: boolean | null;
    password?: string | null;
};

export type UserDomainEntity = {
    id: string | null;
    login: string;
    name: string;
    surname: string;
    patronymic?: string | null;
    role: UserRoles;
    is_blocked: boolean;
    password: string;
};

export type UserRoles = 'student' | 'teacher' | 'admin';

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type $OpenApiTs = {
    '/users/all': {
        get: {
            res: {
                /**
                 * Successful Response
                 */
                200: Array<UserDomainEntity>;
            };
        };
    };
    '/users/{user_id}': {
        get: {
            req: {
                userId: string;
            };
            res: {
                /**
                 * Successful Response
                 */
                200: UserDomainEntity | string;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
        delete: {
            req: {
                userId: string;
            };
            res: {
                /**
                 * Successful Response
                 */
                200: unknown;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/users': {
        get: {
            req: {
                login: string;
                password: string;
            };
            res: {
                /**
                 * Successful Response
                 */
                200: UserDomainEntity | string;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
        post: {
            req: {
                requestBody: CreateUserRequest;
            };
            res: {
                /**
                 * Successful Response
                 */
                200: UserDomainEntity;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
        patch: {
            req: {
                requestBody: UpdateUserRequest;
            };
            res: {
                /**
                 * Successful Response
                 */
                200: UserDomainEntity;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
};