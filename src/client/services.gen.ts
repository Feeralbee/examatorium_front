// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { $OpenApiTs } from './types.gen';

export class UsersService {
    /**
     * Get All Users
     * @returns UserDomainEntity Successful Response
     * @throws ApiError
     */
    public static getAllUsersUsersAllGet(): CancelablePromise<$OpenApiTs['/users/all']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/users/all'
        });
    }
    
    /**
     * Get User By Id
     * @param data The data for the request.
     * @param data.userId
     * @returns UserDomainEntity Successful Response
     * @throws ApiError
     */
    public static getUserByIdUsersUserIdGet(data: $OpenApiTs['/users/{user_id}']['get']['req']): CancelablePromise<$OpenApiTs['/users/{user_id}']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/users/{user_id}',
            path: {
                user_id: data.userId
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Delete User
     * @param data The data for the request.
     * @param data.userId
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static deleteUserUsersUserIdDelete(data: $OpenApiTs['/users/{user_id}']['delete']['req']): CancelablePromise<$OpenApiTs['/users/{user_id}']['delete']['res'][200]> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/users/{user_id}',
            path: {
                user_id: data.userId
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get User By Authorization
     * @param data The data for the request.
     * @param data.login
     * @param data.password
     * @returns UserDomainEntity Successful Response
     * @throws ApiError
     */
    public static getUserByAuthorizationUsersGet(data: $OpenApiTs['/users']['get']['req']): CancelablePromise<$OpenApiTs['/users']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/users',
            query: {
                login: data.login,
                password: data.password
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Create User
     * @param data The data for the request.
     * @param data.requestBody
     * @returns UserDomainEntity Successful Response
     * @throws ApiError
     */
    public static createUserUsersPost(data: $OpenApiTs['/users']['post']['req']): CancelablePromise<$OpenApiTs['/users']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/users',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Update User
     * @param data The data for the request.
     * @param data.requestBody
     * @returns UserDomainEntity Successful Response
     * @throws ApiError
     */
    public static updateUserUsersPatch(data: $OpenApiTs['/users']['patch']['req']): CancelablePromise<$OpenApiTs['/users']['patch']['res'][200]> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/users',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
}