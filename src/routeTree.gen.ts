/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const AuthLazyImport = createFileRoute('/_auth')()
const IndexLazyImport = createFileRoute('/')()
const AuthTeacherIndexLazyImport = createFileRoute('/_auth/teacher/')()
const AuthStudentIndexLazyImport = createFileRoute('/_auth/student/')()
const AuthAdminIndexLazyImport = createFileRoute('/_auth/admin/')()
const AuthTeacherExamsLazyImport = createFileRoute('/_auth/teacher/exams')()
const AuthStudentTitlepagesLazyImport = createFileRoute(
  '/_auth/student/title_pages',
)()
const AuthStudentExamsLazyImport = createFileRoute('/_auth/student/exams')()
const AuthAdminUsersLazyImport = createFileRoute('/_auth/admin/users')()
const AuthAdminThemesLazyImport = createFileRoute('/_auth/admin/themes')()
const AuthAdminQualificationsLazyImport = createFileRoute(
  '/_auth/admin/qualifications',
)()
const AuthAdminQualexamsLazyImport = createFileRoute(
  '/_auth/admin/qual_exams',
)()
const AuthAdminGroupsLazyImport = createFileRoute('/_auth/admin/groups')()
const AuthAdminExamsLazyImport = createFileRoute('/_auth/admin/exams')()
const AuthAdminDisciplinesLazyImport = createFileRoute(
  '/_auth/admin/disciplines',
)()
const AuthAdminCompetenciesLazyImport = createFileRoute(
  '/_auth/admin/competencies',
)()
const AuthAdminInfoUserLazyImport = createFileRoute('/_auth/admin/info/user')()
const AuthAdminInfoThemeLazyImport = createFileRoute(
  '/_auth/admin/info/theme',
)()
const AuthAdminInfoQualificationLazyImport = createFileRoute(
  '/_auth/admin/info/qualification',
)()
const AuthAdminInfoQualexamLazyImport = createFileRoute(
  '/_auth/admin/info/qual_exam',
)()
const AuthAdminInfoGroupLazyImport = createFileRoute(
  '/_auth/admin/info/group',
)()
const AuthAdminInfoExamLazyImport = createFileRoute('/_auth/admin/info/exam')()
const AuthAdminInfoDisciplineLazyImport = createFileRoute(
  '/_auth/admin/info/discipline',
)()
const AuthAdminInfoCompetenceLazyImport = createFileRoute(
  '/_auth/admin/info/competence',
)()
const AuthAdminCreateUserLazyImport = createFileRoute(
  '/_auth/admin/create/user',
)()
const AuthAdminCreateThemeLazyImport = createFileRoute(
  '/_auth/admin/create/theme',
)()
const AuthAdminCreateQualificationLazyImport = createFileRoute(
  '/_auth/admin/create/qualification',
)()
const AuthAdminCreateQualexamLazyImport = createFileRoute(
  '/_auth/admin/create/qual_exam',
)()
const AuthAdminCreateGroupLazyImport = createFileRoute(
  '/_auth/admin/create/group',
)()
const AuthAdminCreateExamLazyImport = createFileRoute(
  '/_auth/admin/create/exam',
)()
const AuthAdminCreateDisciplineLazyImport = createFileRoute(
  '/_auth/admin/create/discipline',
)()
const AuthAdminCreateCompetenceLazyImport = createFileRoute(
  '/_auth/admin/create/competence',
)()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AuthLazyRoute = AuthLazyImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_auth.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthTeacherIndexLazyRoute = AuthTeacherIndexLazyImport.update({
  path: '/teacher/',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/teacher/index.lazy').then((d) => d.Route),
)

const AuthStudentIndexLazyRoute = AuthStudentIndexLazyImport.update({
  path: '/student/',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/student/index.lazy').then((d) => d.Route),
)

const AuthAdminIndexLazyRoute = AuthAdminIndexLazyImport.update({
  path: '/admin/',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/index.lazy').then((d) => d.Route),
)

const AuthTeacherExamsLazyRoute = AuthTeacherExamsLazyImport.update({
  path: '/teacher/exams',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/teacher/exams.lazy').then((d) => d.Route),
)

const AuthStudentTitlepagesLazyRoute = AuthStudentTitlepagesLazyImport.update({
  path: '/student/title_pages',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/student/title_pages.lazy').then((d) => d.Route),
)

const AuthStudentExamsLazyRoute = AuthStudentExamsLazyImport.update({
  path: '/student/exams',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/student/exams.lazy').then((d) => d.Route),
)

const AuthAdminUsersLazyRoute = AuthAdminUsersLazyImport.update({
  path: '/admin/users',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/users.lazy').then((d) => d.Route),
)

const AuthAdminThemesLazyRoute = AuthAdminThemesLazyImport.update({
  path: '/admin/themes',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/themes.lazy').then((d) => d.Route),
)

const AuthAdminQualificationsLazyRoute =
  AuthAdminQualificationsLazyImport.update({
    path: '/admin/qualifications',
    getParentRoute: () => AuthLazyRoute,
  } as any).lazy(() =>
    import('./routes/_auth/admin/qualifications.lazy').then((d) => d.Route),
  )

const AuthAdminQualexamsLazyRoute = AuthAdminQualexamsLazyImport.update({
  path: '/admin/qual_exams',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/qual_exams.lazy').then((d) => d.Route),
)

const AuthAdminGroupsLazyRoute = AuthAdminGroupsLazyImport.update({
  path: '/admin/groups',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/groups.lazy').then((d) => d.Route),
)

const AuthAdminExamsLazyRoute = AuthAdminExamsLazyImport.update({
  path: '/admin/exams',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/exams.lazy').then((d) => d.Route),
)

const AuthAdminDisciplinesLazyRoute = AuthAdminDisciplinesLazyImport.update({
  path: '/admin/disciplines',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/disciplines.lazy').then((d) => d.Route),
)

const AuthAdminCompetenciesLazyRoute = AuthAdminCompetenciesLazyImport.update({
  path: '/admin/competencies',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/competencies.lazy').then((d) => d.Route),
)

const AuthAdminInfoUserLazyRoute = AuthAdminInfoUserLazyImport.update({
  path: '/admin/info/user',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/info/user.lazy').then((d) => d.Route),
)

const AuthAdminInfoThemeLazyRoute = AuthAdminInfoThemeLazyImport.update({
  path: '/admin/info/theme',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/info/theme.lazy').then((d) => d.Route),
)

const AuthAdminInfoQualificationLazyRoute =
  AuthAdminInfoQualificationLazyImport.update({
    path: '/admin/info/qualification',
    getParentRoute: () => AuthLazyRoute,
  } as any).lazy(() =>
    import('./routes/_auth/admin/info/qualification.lazy').then((d) => d.Route),
  )

const AuthAdminInfoQualexamLazyRoute = AuthAdminInfoQualexamLazyImport.update({
  path: '/admin/info/qual_exam',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/info/qual_exam.lazy').then((d) => d.Route),
)

const AuthAdminInfoGroupLazyRoute = AuthAdminInfoGroupLazyImport.update({
  path: '/admin/info/group',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/info/group.lazy').then((d) => d.Route),
)

const AuthAdminInfoExamLazyRoute = AuthAdminInfoExamLazyImport.update({
  path: '/admin/info/exam',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/info/exam.lazy').then((d) => d.Route),
)

const AuthAdminInfoDisciplineLazyRoute =
  AuthAdminInfoDisciplineLazyImport.update({
    path: '/admin/info/discipline',
    getParentRoute: () => AuthLazyRoute,
  } as any).lazy(() =>
    import('./routes/_auth/admin/info/discipline.lazy').then((d) => d.Route),
  )

const AuthAdminInfoCompetenceLazyRoute =
  AuthAdminInfoCompetenceLazyImport.update({
    path: '/admin/info/competence',
    getParentRoute: () => AuthLazyRoute,
  } as any).lazy(() =>
    import('./routes/_auth/admin/info/competence.lazy').then((d) => d.Route),
  )

const AuthAdminCreateUserLazyRoute = AuthAdminCreateUserLazyImport.update({
  path: '/admin/create/user',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/create/user.lazy').then((d) => d.Route),
)

const AuthAdminCreateThemeLazyRoute = AuthAdminCreateThemeLazyImport.update({
  path: '/admin/create/theme',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/create/theme.lazy').then((d) => d.Route),
)

const AuthAdminCreateQualificationLazyRoute =
  AuthAdminCreateQualificationLazyImport.update({
    path: '/admin/create/qualification',
    getParentRoute: () => AuthLazyRoute,
  } as any).lazy(() =>
    import('./routes/_auth/admin/create/qualification.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthAdminCreateQualexamLazyRoute =
  AuthAdminCreateQualexamLazyImport.update({
    path: '/admin/create/qual_exam',
    getParentRoute: () => AuthLazyRoute,
  } as any).lazy(() =>
    import('./routes/_auth/admin/create/qual_exam.lazy').then((d) => d.Route),
  )

const AuthAdminCreateGroupLazyRoute = AuthAdminCreateGroupLazyImport.update({
  path: '/admin/create/group',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/create/group.lazy').then((d) => d.Route),
)

const AuthAdminCreateExamLazyRoute = AuthAdminCreateExamLazyImport.update({
  path: '/admin/create/exam',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/create/exam.lazy').then((d) => d.Route),
)

const AuthAdminCreateDisciplineLazyRoute =
  AuthAdminCreateDisciplineLazyImport.update({
    path: '/admin/create/discipline',
    getParentRoute: () => AuthLazyRoute,
  } as any).lazy(() =>
    import('./routes/_auth/admin/create/discipline.lazy').then((d) => d.Route),
  )

const AuthAdminCreateCompetenceLazyRoute =
  AuthAdminCreateCompetenceLazyImport.update({
    path: '/admin/create/competence',
    getParentRoute: () => AuthLazyRoute,
  } as any).lazy(() =>
    import('./routes/_auth/admin/create/competence.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/admin/competencies': {
      preLoaderRoute: typeof AuthAdminCompetenciesLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/disciplines': {
      preLoaderRoute: typeof AuthAdminDisciplinesLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/exams': {
      preLoaderRoute: typeof AuthAdminExamsLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/groups': {
      preLoaderRoute: typeof AuthAdminGroupsLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/qual_exams': {
      preLoaderRoute: typeof AuthAdminQualexamsLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/qualifications': {
      preLoaderRoute: typeof AuthAdminQualificationsLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/themes': {
      preLoaderRoute: typeof AuthAdminThemesLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/users': {
      preLoaderRoute: typeof AuthAdminUsersLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/student/exams': {
      preLoaderRoute: typeof AuthStudentExamsLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/student/title_pages': {
      preLoaderRoute: typeof AuthStudentTitlepagesLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/teacher/exams': {
      preLoaderRoute: typeof AuthTeacherExamsLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/': {
      preLoaderRoute: typeof AuthAdminIndexLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/student/': {
      preLoaderRoute: typeof AuthStudentIndexLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/teacher/': {
      preLoaderRoute: typeof AuthTeacherIndexLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/create/competence': {
      preLoaderRoute: typeof AuthAdminCreateCompetenceLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/create/discipline': {
      preLoaderRoute: typeof AuthAdminCreateDisciplineLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/create/exam': {
      preLoaderRoute: typeof AuthAdminCreateExamLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/create/group': {
      preLoaderRoute: typeof AuthAdminCreateGroupLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/create/qual_exam': {
      preLoaderRoute: typeof AuthAdminCreateQualexamLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/create/qualification': {
      preLoaderRoute: typeof AuthAdminCreateQualificationLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/create/theme': {
      preLoaderRoute: typeof AuthAdminCreateThemeLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/create/user': {
      preLoaderRoute: typeof AuthAdminCreateUserLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/info/competence': {
      preLoaderRoute: typeof AuthAdminInfoCompetenceLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/info/discipline': {
      preLoaderRoute: typeof AuthAdminInfoDisciplineLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/info/exam': {
      preLoaderRoute: typeof AuthAdminInfoExamLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/info/group': {
      preLoaderRoute: typeof AuthAdminInfoGroupLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/info/qual_exam': {
      preLoaderRoute: typeof AuthAdminInfoQualexamLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/info/qualification': {
      preLoaderRoute: typeof AuthAdminInfoQualificationLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/info/theme': {
      preLoaderRoute: typeof AuthAdminInfoThemeLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/admin/info/user': {
      preLoaderRoute: typeof AuthAdminInfoUserLazyImport
      parentRoute: typeof AuthLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AuthLazyRoute.addChildren([
    AuthAdminCompetenciesLazyRoute,
    AuthAdminDisciplinesLazyRoute,
    AuthAdminExamsLazyRoute,
    AuthAdminGroupsLazyRoute,
    AuthAdminQualexamsLazyRoute,
    AuthAdminQualificationsLazyRoute,
    AuthAdminThemesLazyRoute,
    AuthAdminUsersLazyRoute,
    AuthStudentExamsLazyRoute,
    AuthStudentTitlepagesLazyRoute,
    AuthTeacherExamsLazyRoute,
    AuthAdminIndexLazyRoute,
    AuthStudentIndexLazyRoute,
    AuthTeacherIndexLazyRoute,
    AuthAdminCreateCompetenceLazyRoute,
    AuthAdminCreateDisciplineLazyRoute,
    AuthAdminCreateExamLazyRoute,
    AuthAdminCreateGroupLazyRoute,
    AuthAdminCreateQualexamLazyRoute,
    AuthAdminCreateQualificationLazyRoute,
    AuthAdminCreateThemeLazyRoute,
    AuthAdminCreateUserLazyRoute,
    AuthAdminInfoCompetenceLazyRoute,
    AuthAdminInfoDisciplineLazyRoute,
    AuthAdminInfoExamLazyRoute,
    AuthAdminInfoGroupLazyRoute,
    AuthAdminInfoQualexamLazyRoute,
    AuthAdminInfoQualificationLazyRoute,
    AuthAdminInfoThemeLazyRoute,
    AuthAdminInfoUserLazyRoute,
  ]),
  LoginLazyRoute,
])

/* prettier-ignore-end */
